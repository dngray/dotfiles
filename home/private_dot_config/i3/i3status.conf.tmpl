# i3status configuration file.
# see "man i3status" for documentation.

# It is important that this file is edited as UTF-8.
# The following line should contain a sharp s:
# ÃŸ
# If the above line is not correctly displayed, fix your editor first!

general {
        colors = true
        interval = 5
        color_good =     '#75b938' # green selenized_dark
        color_degraded = '#dbb32d' # yellow selenized_dark
        color_bad =      '#fa5750' # red selenized_dark
}

order += "disk /"
#order += "disk /mnt/sdb1"
#order += "run_watch DHCP"
#order += "run_watch VPN"
{{ if eq (output "hostnamectl" "--json=short" | mustFromJson).Chassis "laptop" }}
order += "wireless {{ .wifinic }}"
{{ end -}}
order += "ethernet {{ .ethernetnic }}"
{{- if ne (output "hostnamectl" "--json=short" | mustFromJson).Chassis "vm" }}
order += "ethernet {{ .usbnic }}"
{{ end -}}
order += "ipv6"
{{ if eq (output "hostnamectl" "--json=short" | mustFromJson).Chassis "laptop" }}
order += "battery 0"
{{ end -}}
#order += "load"
order += "volume master"
order += "tztime date"
order += "tztime time"

ethernet {{ .ethernetnic }} {
        # if you use %speed, i3status requires root privileges
        #format_up = "E: %ip (%speed)"
        format_up = "E: %ip"
        format_down = "E: down"
}
{{ if eq (output "hostnamectl" "--json=short" | mustFromJson).Chassis "laptop" }}
wireless {{ .wifinic }} {
        format_up = "W: (%quality at %essid) %ip"
        format_down = "W: down"
}
{{- end -}}
{{ if ne (output "hostnamectl" "--json=short" | mustFromJson).Chassis "vm" }}
ethernet {{ .usbnic }} {
        # if you use %speed, i3status requires root privileges
        #format_up = "USB: %ip (%speed)"
        format_up = "USB: %ip"
        format_down = "USB: down"
}
{{- end }}
{{ if eq (output "hostnamectl" "--json=short" | mustFromJson).Chassis "laptop" }}
battery 0 {
        format = "%status %percentage %remaining %emptytime"
        format_down = "No battery"
        status_chr = "âš¡ CHR"
        status_bat = "ðŸ”‹ BAT"
        status_unk = "? UNK"
        status_full = "â˜» FULL"
        path = "/sys/class/power_supply/BAT%d/uevent"
        low_threshold = 10
}
{{ end -}}
#run_watch DHCP {
#        pidfile = "/var/run/dhcpcd*.pid"
#}

#run_watch VPN {
#        pidfile = "/var/run/vpnc/pid"
#}

tztime time {
	format = "%I:%M %p"
}

tztime date {
        format = "%a %d %b"
}

load {
        format = "%1min"
}

disk "/" {
        prefix_type = "decimal"
        format = "%used (%avail free) / %total "
        low_threshold = "50"
}

#disk "/mnt/sdb1" {
#        prefix_type = "decimal"
#        format = "%used (%avail free) / %total "
#        low_threshold = "65"
#        threshold_type = "mbytes_avail"
#}

volume master {
        format = "â™ª: %volume"
        format_muted = "â™ª: muted (%volume)"
        device = "default"
        mixer = "Master"
        mixer_idx = 0
}
