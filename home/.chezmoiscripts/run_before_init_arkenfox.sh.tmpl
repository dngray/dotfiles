{{ if not .state.headless -}}

#!/usr/bin/env bash

CHEZMOI_ROOT="$XDG_DATA_HOME/chezmoi/home"
TEMPLATE_DIR="$CHEZMOI_ROOT/.chezmoitemplates/firefox"
SCRIPT_FILE="$TEMPLATE_DIR/updater.sh"
PREFSCLEANER_FILE="$TEMPLATE_DIR/prefsCleaner.sh"

# Download method priority: curl -> wget
DOWNLOAD_METHOD=''
if command -v curl >/dev/null; then
  DOWNLOAD_METHOD='curl --max-redirs 3 -o'
elif command -v wget >/dev/null; then
  DOWNLOAD_METHOD='wget --max-redirect 3 -O'
else
  echo -e "${RED}This script requires curl or wget.\nProcess aborted${NC}"
  exit 1
fi

download_file() { # expects URL as argument ($1)
  declare -r tf=$(mktemp)

  $DOWNLOAD_METHOD "${tf}" "$1" && echo "$tf" || echo '' # return the temp-filename or empty string on error
}

update_updater() {
  declare -r tmpfile="$(download_file 'https://raw.githubusercontent.com/arkenfox/user.js/master/updater.sh')"
  [ -z "${tmpfile}" ] && echo -e "${RED}Error! Could not download updater.sh${NC}" && return 1 # check if download failed

  mv "${tmpfile}" "$SCRIPT_FILE"
  chmod u+x "$SCRIPT_FILE"
  "$SCRIPT_FILE" "$@" -d
  exit 0
}

update_prefsCleaner() {
  declare -r tmpfile="$(download_file 'https://raw.githubusercontent.com/arkenfox/user.js/master/prefsCleaner.sh')"
  [ -z "${tmpfile}" ] && echo -e "${RED}Error! Could not download prefsCleaner.sh${NC}" && return 1 # check if download failed
  mv "${tmpfile}" "$PREFSCLEANER_FILE"
  chmod u+x "$PREFSCLEANER_FILE"
  "$PREFSCLEANER_FILE" "-s"
}

update_userjs() {
  if [ ! -f "$1"/user.js ]; then
    printf "user.js not found getting one\n"

    "$SCRIPT_FILE" "-b" "-d" "-s" \
    -o "$1"/user-overrides.js \
    -p "$1"
  else
    printf "$2/user.js found, reusing\n"
  fi
}

checkScriptAge() {
  if [ ! -f "$SCRIPT_FILE" ]; then
    printf "updater.sh not found getting one\n"
    update_updater "$@"
  elif [ "$(find "$SCRIPT_FILE" -mtime +120)" ]; then
    printf "File updater.sh exists and is older than 120 days, getting a new one\n"
    rm "$SCRIPT_FILE"
    update_updater "$@"
  fi

  if [ ! -f "$PREFSCLEANER_FILE" ]; then
    printf "prefsCleaner.sh not found getting one\n"
    update_prefsCleaner
  elif [ "$(find "$PREFSCLEANER_FILE" -mtime +120)" ]; then
    printf "File prefsCleaner.sh exists and is older than 120 days, getting a new one\n"
    rm "$PREFSCLEANER_FILE"
    update_prefsCleaner
  fi
}

update_profiles() {
  declare -a profiles=(default
                       default-no-rfp
                       direct
                       direct-no-rfp)

  for i in "${!profiles[@]}"; do
    update_userjs "$TEMPLATE_DIR/${profiles[$i]}" "${profiles[$i]}"
  done
}

checkScriptAge
update_profiles

{{- end }}
